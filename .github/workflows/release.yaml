name: Publish To NuGet
 
on:
  push:
    branches: [ release ]
    tags-ignore: [ '**' ]  # 避免 Tag 触发循环 
 
jobs:
  build-and-publish:
    runs-on: ubuntu-latest 
    steps:
      - name: Checkout code 
        uses: actions/checkout@v4 
        with:
          fetch-depth: 0  # 获取完整 Git 历史 
 
      - name: Setup .NET 
        uses: actions/setup-dotnet@v3 
        with:
          dotnet-version: '8.0.14'
 
      - name: Get Version 
        id: get_version 
        run: |
          # 使用 GitVersion 工具获取版本号 
          dotnet tool install --global GitVersion.Tool --version 5.* 
          VERSION=$(dotnet-gitversion /showvariable SemVer)
          echo "VERSION=$VERSION" >> $GITHUB_ENV 
          echo "TAG=v$VERSION" >> $GITHUB_ENV 
 
      - name: Build & Pack 
        run: |
          dotnet restore 
          dotnet build --configuration Release --no-restore 
          dotnet pack src/NebulaBus.csproj  -p:PackageVersion=${{ env.VERSION }} --output nupkgs 
 
      - name: Push to NuGet 
        run: dotnet nuget push "nupkgs/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json  
 
      - name: Create Git Tag 
        run: |
          git config --global user.name  "GitHub Actions"
          git config --global user.email  "actions@github.com" 
          git tag ${{ env.TAG }} -m "Release ${{ env.TAG }}"
          git push origin ${{ env.TAG }}