name: Publish To NuGet

on:
  repository_dispatch:
    types: [manual-trigger]
  push:
    branches: [release]
    tags-ignore: ["**"]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取完整 Git 历史

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Git Semantic Version
        id: gitversion
        uses: PaulHatch/semantic-version@v5.4.0
        with:
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          version_format: "${major}.${minor}.${patch}.${increment}"
          change_path: "src/NebulaBus"

      # - name: Install GitVersion
      #   uses: gittools/actions/gitversion/setup@v3.2.0
      #   with:
      #     versionSpec: "6.2.x"

      # - name: Determine Version
      #   id: gitversion
      #   uses: gittools/actions/gitversion/execute@v3.2.0
      #   with:
      #     updateAssemblyInfo: true
      #     useConfigFile: true
      #     configFilePath: src/GitVersion.yaml
          
      - run: |
          echo "FullSemVer (env.fullSemVer)            : ${{ steps.gitversion.outputs }}"
        name: Display GitVersion variables (without prefix)

      # - run: |
      #     echo "FullSemVer (env.GitVersion_FullSemVer) : ${{ env.GitVersion_FullSemVer }}"
      #   name: Display GitVersion variables (with prefix)

      # - run: |
      #     echo "FullSemVer (steps.gitversion.outputs.fullSemVer)            : ${{ steps.gitversion.outputs.fullSemVer }}"
      #   name: Display GitVersion outputs (step output without prefix)

      # - run: |
      #     echo "FullSemVer (steps.gitversion.outputs.GitVersion_FullSemVer) : ${{ steps.gitversion.outputs.GitVersion_FullSemVer }}"
      #   name: Display GitVersion outputs (step output with prefix)

      - name: Build & Pack
        working-directory: src/NebulaBus
        run: |
          dotnet restore
          dotnet build --configuration Release --no-restore
          dotnet pack NebulaBus.csproj  -p:PackageVersion=${{ steps.gitversion.outputs.version }} --output nupkgs

      - name: Show Package
        run: |
          cd nupkgs
          ls -l
      # - name: Push to NuGet
      #   run: dotnet nuget push "nupkgs/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

      # - name: Create Git Tag
      #   run: |
      #     git config --global user.name  "GitHub Actions"
      #     git config --global user.email  "actions@github.com"
      #     git tag ${{ env.TAG }} -m "Release ${{ env.TAG }}"
      #     git push origin ${{ env.TAG }}
