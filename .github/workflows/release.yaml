name: Publish To NuGet

on:
  repository_dispatch:
    types: [manual-trigger]
  push:
    branches: [release]
    tags-ignore: ["**"]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取完整 Git 历史

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Git Semantic Version
        id: gitversion
        uses: PaulHatch/semantic-version@v5.4.0
        with:
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          version_format: "${major}.${minor}.${patch}.${increment}"
          change_path: "src/NebulaBus"

      - name: NebulaBus - Build & Pack
        working-directory: .
        run: |
          dotnet restore src/NebulaBus.sln
          dotnet pack src/NebulaBus/NebulaBus.csproj /p:FileVersion=${{ steps.gitversion.outputs.version }} /p:Version=${{ steps.gitversion.outputs.version }}  -p:PackageVersion=${{ steps.gitversion.outputs.version }} --output nupkgs
          dotnet pack src/NebulaBus.Store.Memory/NebulaBus.Store.Memory.csproj /p:FileVersion=${{ steps.gitversion.outputs.version }} /p:Version=${{ steps.gitversion.outputs.version }}  -p:PackageVersion=${{ steps.gitversion.outputs.version }} --output nupkgs
          dotnet pack src/NebulaBus.Store.Redis/NebulaBus.Store.Redis.csproj /p:FileVersion=${{ steps.gitversion.outputs.version }} /p:Version=${{ steps.gitversion.outputs.version }}  -p:PackageVersion=${{ steps.gitversion.outputs.version }} --output nupkgs
          dotnet pack src/NebulaBus.Transport.Memory/NebulaBus.Transport.Memory.csproj /p:FileVersion=${{ steps.gitversion.outputs.version }} /p:Version=${{ steps.gitversion.outputs.version }}  -p:PackageVersion=${{ steps.gitversion.outputs.version }} --output nupkgs
          dotnet pack src/NebulaBus.Transport.Rabbitmq/NebulaBus.Transport.Rabbitmq.csproj /p:FileVersion=${{ steps.gitversion.outputs.version }} /p:Version=${{ steps.gitversion.outputs.version }}  -p:PackageVersion=${{ steps.gitversion.outputs.version }} --output nupkgs

      - name: Push to NuGet
        working-directory: .
        run: dotnet nuget push "nupkgs/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

      # - name: Create Git Tag
      #   run: |
      #     git config --global user.name  "GitHub Actions"
      #     git config --global user.email  "actions@github.com"
      #     git tag ${{ steps.gitversion.outputs.version_tag }} -m "Release ${{ steps.gitversion.outputs.version_tag }}"
      #     git push origin ${{ steps.gitversion.outputs.version_tag }}
